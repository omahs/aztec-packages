constant %N = 256;
namespace avmMini(256);
    col fixed clk(i) { i };
    col fixed positive(i) { (i + 1) };
    col fixed first = [1] + [0]*;
    col witness subop;
    col witness inter_idx;
    col witness mem_idx;
    col witness last;
    (avmMini.subop * (1 - avmMini.subop)) = 0;
    ((avmMini.inter_idx * (1 - avmMini.inter_idx)) * (2 - avmMini.inter_idx)) = 0;
    col witness m_clk;
    col witness m_addr;
    col witness m_val;
    col witness m_lastAccess;
    col witness m_rw;
    (avmMini.m_lastAccess * (1 - avmMini.m_lastAccess)) = 0;
    (avmMini.m_rw * (1 - avmMini.m_rw)) = 0;
    (((1 - avmMini.first) * (1 - avmMini.m_lastAccess)) * (avmMini.m_addr' - avmMini.m_addr)) = 0;
    (((((1 - avmMini.first) * (1 - avmMini.last)) * (1 - avmMini.m_lastAccess)) * (1 - avmMini.m_rw')) * (avmMini.m_val' - avmMini.m_val)) = 0;
